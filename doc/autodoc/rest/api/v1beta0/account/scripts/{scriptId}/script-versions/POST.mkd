# `POST /api/v1beta0/account/scripts/{scriptId}/script-versions/` #

Create a new Script Version for a given Script.

## Request Parameters #

### Path Parameters ###

Path parameters are included in the URL.

#### `scriptId` ####

The ID of a Script object.

Parameter of type: `integer`.







### Request Body ###

The request body parameter is passed as the body of the request.

#### `scriptVersionObject` ####

The JSON representation of a ScriptVersion object.


An object of type: [`ScriptVersion`](./../../../../../../../definitions/ScriptVersion.mkd).





## Responses ##


### 201 ###

The JSON representation of a ScriptVersion object.

The response body is an object of type:
[`ScriptVersionDetailsResponse`](./../../../../../../../definitions/ScriptVersionDetailsResponse.mkd).



### 400 ###

A client-side error was made.

The response body is an object of type:
[`ApiErrorResponse`](./../../../../../../../definitions/ApiErrorResponse.mkd).

The following errors **may** be returned by this endpoint.

+ `InvalidStructure`: The request was structurally incorrect, and was not understood by the API. Check the error message for more information.
+ `InvalidValue`: The request was understood by the API, but included invalid data. Check the error message for more information.
+ `BadRequest`: The request wasn't understood by the API. Check the error message for more information.


### 401 ###

The request was not authenticated.

The response body is an object of type:
[`ApiErrorResponse`](./../../../../../../../definitions/ApiErrorResponse.mkd).

The following errors **may** be returned by this endpoint.

+ `BadAuthentication`: The request was not properly authenticated. Check the error message for more information.


### 403 ###

Insufficient permissions.

The response body is an object of type:
[`ApiErrorResponse`](./../../../../../../../definitions/ApiErrorResponse.mkd).

The following errors **may** be returned by this endpoint.

+ `ScopeViolation`: This request should be made in a different Scope. Check the error message for more information.
+ `PermissionViolation`: You do not have the necessary permissions to perform this request. Check the error message for more information.


### 404 ###

Resource not found.

The response body is an object of type:
[`ApiErrorResponse`](./../../../../../../../definitions/ApiErrorResponse.mkd).

The following errors **may** be returned by this endpoint.

+ `ObjectNotFound`: The object you are trying to access does not exist. Check the error message for more information.


### 409 ###

Conflict with current state.

The response body is an object of type:
[`ApiErrorResponse`](./../../../../../../../definitions/ApiErrorResponse.mkd).

The following errors **may** be returned by this endpoint.

+ `ObjectInUse`: These changes aren't possible while this object is in use. Check the error message for more information.
+ `UnicityViolation`: These changes would violate a unicity constraint. Check the error message for more information.
+ `Locked`: Some of the objects being changed are locked and cannot be changed. Check the error message for more information.
+ `NotEnabledPlatform`: This Cloud platform is not enabled. Check the error message for more information.
+ `OperatingSystemMismatch`: The Operating System does not match. Check the error message for more information.
+ `UnacceptableObjectConfiguration`: Some of these settings cannot be applied, they either conflict with the current state or are invalid. Check the error message for more information.


### 422 ###

This request was well-formed but was rejected due to semantic errors.

The response body is an object of type:
[`ApiErrorResponse`](./../../../../../../../definitions/ApiErrorResponse.mkd).

The following errors **may** be returned by this endpoint.

+ `ConfigurationMismatch`: Some of the configuration settings cannot be applied because they conflict with the current state. Check the error message for more information.


### 500 ###

A server-side error occured.

The response body is an object of type:
[`ApiErrorResponse`](./../../../../../../../definitions/ApiErrorResponse.mkd).



### 501 ###

This feature is not implemented in Scalr.

The response body is an object of type:
[`ApiErrorResponse`](./../../../../../../../definitions/ApiErrorResponse.mkd).



### 503 ###

The service is currently unavailable.

The response body is an object of type:
[`ApiErrorResponse`](./../../../../../../../definitions/ApiErrorResponse.mkd).





## Swagger Definition ##

    {
      "get": {
        "description": "List all the Script Versions for the specified Script.", 
        "responses": {
          "200": {
            "description": "A list of ScriptVersion objects.", 
            "schema": {
              "$ref": "#/definitions/ScriptVersionListResponse"
            }
          }, 
          "400": {
            "description": "A client-side error was made.", 
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }, 
            "x-errorCodes": [
              {
                "description": "The request was structurally incorrect, and was not understood by the API.", 
                "name": "InvalidStructure"
              }, 
              {
                "description": "The request was understood by the API, but included invalid data.", 
                "name": "InvalidValue"
              }, 
              {
                "description": "The request wasn't understood by the API.", 
                "name": "BadRequest"
              }
            ]
          }, 
          "401": {
            "description": "The request was not authenticated.", 
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }, 
            "x-errorCodes": [
              {
                "description": "The request was not properly authenticated.", 
                "name": "BadAuthentication"
              }
            ]
          }, 
          "403": {
            "description": "Insufficient permissions.", 
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }, 
            "x-errorCodes": [
              {
                "description": "This request should be made in a different Scope.", 
                "name": "ScopeViolation"
              }, 
              {
                "description": "You do not have the necessary permissions to perform this request.", 
                "name": "PermissionViolation"
              }
            ]
          }, 
          "404": {
            "description": "Resource not found.", 
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }, 
            "x-errorCodes": [
              {
                "description": "This endpoint does not exist.", 
                "name": "EndpointNotFound", 
                "noDoc": true
              }, 
              {
                "description": "The object you are trying to access does not exist.", 
                "name": "ObjectNotFound"
              }
            ]
          }, 
          "409": {
            "description": "Conflict with current state.", 
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }, 
            "x-errorCodes": [
              {
                "description": "These changes aren't possible while this object is in use.", 
                "name": "ObjectInUse"
              }, 
              {
                "description": "These changes would violate a unicity constraint.", 
                "name": "UnicityViolation"
              }, 
              {
                "description": "Some of the objects being changed are locked and cannot be changed.", 
                "name": "Locked"
              }, 
              {
                "description": "This Cloud platform is not enabled.", 
                "name": "NotEnabledPlatform"
              }, 
              {
                "description": "The Operating System does not match.", 
                "name": "OperatingSystemMismatch"
              }, 
              {
                "description": "Some of these settings cannot be applied, they either conflict with the current state or are invalid.", 
                "name": "UnacceptableObjectConfiguration"
              }
            ]
          }, 
          "422": {
            "description": "This request was well-formed but was rejected due to semantic errors.", 
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }, 
            "x-errorCodes": [
              {
                "description": "Some of the configuration settings cannot be applied because they conflict with the current state.", 
                "name": "ConfigurationMismatch"
              }
            ]
          }, 
          "500": {
            "description": "A server-side error occured.", 
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }, 
          "501": {
            "description": "This feature is not implemented in Scalr.", 
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }, 
          "503": {
            "description": "The service is currently unavailable.", 
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }, 
      "parameters": [
        {
          "description": "The ID of a Script object.", 
          "in": "path", 
          "name": "scriptId", 
          "required": true, 
          "type": "integer", 
          "x-references": {
            "$ref": "#/definitions/Script"
          }
        }
      ], 
      "post": {
        "description": "Create a new Script Version for a given Script.", 
        "parameters": [
          {
            "description": "The JSON representation of a ScriptVersion object.", 
            "in": "body", 
            "name": "scriptVersionObject", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/ScriptVersion"
            }
          }
        ], 
        "responses": {
          "201": {
            "description": "The JSON representation of a ScriptVersion object.", 
            "schema": {
              "$ref": "#/definitions/ScriptVersionDetailsResponse"
            }
          }, 
          "400": {
            "description": "A client-side error was made.", 
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }, 
            "x-errorCodes": [
              {
                "description": "The request was structurally incorrect, and was not understood by the API.", 
                "name": "InvalidStructure"
              }, 
              {
                "description": "The request was understood by the API, but included invalid data.", 
                "name": "InvalidValue"
              }, 
              {
                "description": "The request wasn't understood by the API.", 
                "name": "BadRequest"
              }
            ]
          }, 
          "401": {
            "description": "The request was not authenticated.", 
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }, 
            "x-errorCodes": [
              {
                "description": "The request was not properly authenticated.", 
                "name": "BadAuthentication"
              }
            ]
          }, 
          "403": {
            "description": "Insufficient permissions.", 
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }, 
            "x-errorCodes": [
              {
                "description": "This request should be made in a different Scope.", 
                "name": "ScopeViolation"
              }, 
              {
                "description": "You do not have the necessary permissions to perform this request.", 
                "name": "PermissionViolation"
              }
            ]
          }, 
          "404": {
            "description": "Resource not found.", 
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }, 
            "x-errorCodes": [
              {
                "description": "This endpoint does not exist.", 
                "name": "EndpointNotFound", 
                "noDoc": true
              }, 
              {
                "description": "The object you are trying to access does not exist.", 
                "name": "ObjectNotFound"
              }
            ]
          }, 
          "409": {
            "description": "Conflict with current state.", 
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }, 
            "x-errorCodes": [
              {
                "description": "These changes aren't possible while this object is in use.", 
                "name": "ObjectInUse"
              }, 
              {
                "description": "These changes would violate a unicity constraint.", 
                "name": "UnicityViolation"
              }, 
              {
                "description": "Some of the objects being changed are locked and cannot be changed.", 
                "name": "Locked"
              }, 
              {
                "description": "This Cloud platform is not enabled.", 
                "name": "NotEnabledPlatform"
              }, 
              {
                "description": "The Operating System does not match.", 
                "name": "OperatingSystemMismatch"
              }, 
              {
                "description": "Some of these settings cannot be applied, they either conflict with the current state or are invalid.", 
                "name": "UnacceptableObjectConfiguration"
              }
            ]
          }, 
          "422": {
            "description": "This request was well-formed but was rejected due to semantic errors.", 
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }, 
            "x-errorCodes": [
              {
                "description": "Some of the configuration settings cannot be applied because they conflict with the current state.", 
                "name": "ConfigurationMismatch"
              }
            ]
          }, 
          "500": {
            "description": "A server-side error occured.", 
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }, 
          "501": {
            "description": "This feature is not implemented in Scalr.", 
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }, 
          "503": {
            "description": "The service is currently unavailable.", 
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    }