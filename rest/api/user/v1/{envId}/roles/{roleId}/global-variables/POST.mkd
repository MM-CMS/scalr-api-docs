# `POST /api/user/v1/{envId}/roles/{roleId}/global-variables/` #

Declare a new Global Variable for this Role

## Request Parameters #

### Path Parameters ###

Path parameters are included in the URL.

#### `envId` ####

The ID of the Environment scoping this request

Parameter of type: `integer`.


#### `roleId` ####

The ID of a Role object.

Parameter of type: `integer`.







### Request Body ###

The request body parameter is passed as the body of the request.

#### `globalVariableObject` ####

The JSON representation of a GlobalVariable object.


An object of type: [`GlobalVariable`](./../../../../../../../../definitions/GlobalVariable.mkd).





## Responses ##


### 400 ###

A client-side error was made

Response body: [`ApiErrorEnvelope`](./../../../../../../../../definitions/ApiErrorEnvelope.mkd).


### 201 ###

The JSON representation of a GlobalVariable object.

Response body: [`GlobalVariableDetailEnvelope`](./../../../../../../../../definitions/GlobalVariableDetailEnvelope.mkd).


### 403 ###

Insufficient permissions

Response body: [`ApiErrorEnvelope`](./../../../../../../../../definitions/ApiErrorEnvelope.mkd).


### 500 ###

A server-side error occured

Response body: [`ApiErrorEnvelope`](./../../../../../../../../definitions/ApiErrorEnvelope.mkd).


### 401 ###

Request was not authenticated

Response body: [`ApiErrorEnvelope`](./../../../../../../../../definitions/ApiErrorEnvelope.mkd).




## Swagger Definition ##

    {
      "post": {
        "description": "Declare a new Global Variable for this Role", 
        "parameters": [
          {
            "required": true, 
            "in": "body", 
            "description": "The JSON representation of a GlobalVariable object.", 
            "name": "globalVariableObject", 
            "schema": {
              "$ref": "#/definitions/GlobalVariable"
            }
          }
        ], 
        "responses": {
          "400": {
            "description": "A client-side error was made", 
            "schema": {
              "$ref": "#/definitions/ApiErrorEnvelope"
            }
          }, 
          "201": {
            "description": "The JSON representation of a GlobalVariable object.", 
            "schema": {
              "$ref": "#/definitions/GlobalVariableDetailEnvelope"
            }
          }, 
          "403": {
            "description": "Insufficient permissions", 
            "schema": {
              "$ref": "#/definitions/ApiErrorEnvelope"
            }
          }, 
          "500": {
            "description": "A server-side error occured", 
            "schema": {
              "$ref": "#/definitions/ApiErrorEnvelope"
            }
          }, 
          "401": {
            "description": "Request was not authenticated", 
            "schema": {
              "$ref": "#/definitions/ApiErrorEnvelope"
            }
          }
        }
      }, 
      "parameters": [
        {
          "required": true, 
          "type": "integer", 
          "description": "The ID of the Environment scoping this request", 
          "in": "path", 
          "name": "envId"
        }, 
        {
          "required": true, 
          "type": "integer", 
          "description": "The ID of a Role object.", 
          "in": "path", 
          "name": "roleId"
        }
      ], 
      "get": {
        "description": "List Global Variables associated with this Role", 
        "responses": {
          "200": {
            "description": "A list of GlobalVariable objects.", 
            "schema": {
              "$ref": "#/definitions/GlobalVariableListEnvelope"
            }
          }, 
          "400": {
            "description": "A client-side error was made", 
            "schema": {
              "$ref": "#/definitions/ApiErrorEnvelope"
            }
          }, 
          "403": {
            "description": "Insufficient permissions", 
            "schema": {
              "$ref": "#/definitions/ApiErrorEnvelope"
            }
          }, 
          "500": {
            "description": "A server-side error occured", 
            "schema": {
              "$ref": "#/definitions/ApiErrorEnvelope"
            }
          }, 
          "401": {
            "description": "Request was not authenticated", 
            "schema": {
              "$ref": "#/definitions/ApiErrorEnvelope"
            }
          }
        }
      }
    }