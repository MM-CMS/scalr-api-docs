# `DELETE /api/v1beta0/user/{envId}/roles/{roleId}/images/{imageId}/` #

Dis-associates an Image from a given Role.

## Request Parameters #

### Path Parameters ###

Path parameters are included in the URL.

#### `envId` ####

The ID of the Environment scoping this request.

Parameter of type: `integer`.


#### `roleId` ####

The ID of a Role object.

Parameter of type: `integer`.


#### `imageId` ####

The ID of a Image object.

Parameter of type: `string`.










## Responses ##


### 204 ###

Successful deletion.




### 400 ###

A client-side error was made.

The response body is an object of type:
[`ApiErrorResponse`](./../../../../../../../../../definitions/ApiErrorResponse.mkd).

The following errors **may** be returned by this endpoint.

+ `InvalidStructure`: The request was structurally incorrect, and was not understood by the API. Check the error message for more information.
+ `InvalidValue`: The request was understood by the API, but included invalid data. Check the error message for more information.
+ `BadRequest`: The request wasn't understood by the API. Check the error message for more information.


### 401 ###

The request was not authenticated.

The response body is an object of type:
[`ApiErrorResponse`](./../../../../../../../../../definitions/ApiErrorResponse.mkd).

The following errors **may** be returned by this endpoint.

+ `BadAuthentication`: The request was not properly authenticated. Check the error message for more information.


### 403 ###

Insufficient permissions.

The response body is an object of type:
[`ApiErrorResponse`](./../../../../../../../../../definitions/ApiErrorResponse.mkd).

The following errors **may** be returned by this endpoint.

+ `ScopeViolation`: This request should be made in a different Scope. Check the error message for more information.
+ `PermissionViolation`: You do not have the necessary permissions to perform this request. Check the error message for more information.


### 404 ###

Resource not found.

The response body is an object of type:
[`ApiErrorResponse`](./../../../../../../../../../definitions/ApiErrorResponse.mkd).

The following errors **may** be returned by this endpoint.

+ `ObjectNotFound`: The object you are trying to access does not exist. Check the error message for more information.


### 409 ###

Conflict with current state.

The response body is an object of type:
[`ApiErrorResponse`](./../../../../../../../../../definitions/ApiErrorResponse.mkd).

The following errors **may** be returned by this endpoint.

+ `ObjectInUse`: These changes aren't possible while this object is in use. Check the error message for more information.
+ `UnicityViolation`: These changes would violate a unicity constraint. Check the error message for more information.
+ `Locked`: Some of the objects being changed are locked and cannot be changed. Check the error message for more information.
+ `NotEnabledPlatform`: This Cloud platform is not enabled. Check the error message for more information.
+ `OperatingSystemMismatch`: The Operating System does not match. Check the error message for more information.
+ `Deprecated`: Some of the objects or actions being access are deprecated. Check the error message for more information.
+ `UnacceptableState`: The action can't be perfomed in the current object's state. Check the error message for more information.
+ `ObjectNotFoundOnCloud`: The object that you are trying to access does not exist on the cloud. Check the error message for more information.
+ `UnacceptableObjectConfiguration`: Some of these settings cannot be applied, they either conflict with the current state or are invalid. Check the error message for more information.


### 422 ###

This request was well-formed but was rejected due to semantic errors.

The response body is an object of type:
[`ApiErrorResponse`](./../../../../../../../../../definitions/ApiErrorResponse.mkd).

The following errors **may** be returned by this endpoint.

+ `ConfigurationMismatch`: Some of the configuration settings cannot be applied because they conflict with the current state. Check the error message for more information.


### 500 ###

A server-side error occured.

The response body is an object of type:
[`ApiErrorResponse`](./../../../../../../../../../definitions/ApiErrorResponse.mkd).



### 501 ###

This feature is not implemented in Scalr.

The response body is an object of type:
[`ApiErrorResponse`](./../../../../../../../../../definitions/ApiErrorResponse.mkd).



### 503 ###

The service is currently unavailable.

The response body is an object of type:
[`ApiErrorResponse`](./../../../../../../../../../definitions/ApiErrorResponse.mkd).





## Swagger Definition ##

    {
      "delete": {
        "description": "Dis-associates an Image from a given Role.", 
        "responses": {
          "204": {
            "description": "Successful deletion."
          }, 
          "400": {
            "description": "A client-side error was made.", 
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }, 
            "x-errorCodes": [
              {
                "description": "The request was structurally incorrect, and was not understood by the API.", 
                "name": "InvalidStructure"
              }, 
              {
                "description": "The request was understood by the API, but included invalid data.", 
                "name": "InvalidValue"
              }, 
              {
                "description": "The request wasn't understood by the API.", 
                "name": "BadRequest"
              }
            ]
          }, 
          "401": {
            "description": "The request was not authenticated.", 
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }, 
            "x-errorCodes": [
              {
                "description": "The request was not properly authenticated.", 
                "name": "BadAuthentication"
              }
            ]
          }, 
          "403": {
            "description": "Insufficient permissions.", 
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }, 
            "x-errorCodes": [
              {
                "description": "This request should be made in a different Scope.", 
                "name": "ScopeViolation"
              }, 
              {
                "description": "You do not have the necessary permissions to perform this request.", 
                "name": "PermissionViolation"
              }
            ]
          }, 
          "404": {
            "description": "Resource not found.", 
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }, 
            "x-errorCodes": [
              {
                "description": "This endpoint does not exist.", 
                "name": "EndpointNotFound", 
                "noDoc": true
              }, 
              {
                "description": "The object you are trying to access does not exist.", 
                "name": "ObjectNotFound"
              }
            ]
          }, 
          "409": {
            "description": "Conflict with current state.", 
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }, 
            "x-errorCodes": [
              {
                "description": "These changes aren't possible while this object is in use.", 
                "name": "ObjectInUse"
              }, 
              {
                "description": "These changes would violate a unicity constraint.", 
                "name": "UnicityViolation"
              }, 
              {
                "description": "Some of the objects being changed are locked and cannot be changed.", 
                "name": "Locked"
              }, 
              {
                "description": "This Cloud platform is not enabled.", 
                "name": "NotEnabledPlatform"
              }, 
              {
                "description": "The Operating System does not match.", 
                "name": "OperatingSystemMismatch"
              }, 
              {
                "description": "Some of the objects or actions being access are deprecated.", 
                "name": "Deprecated"
              }, 
              {
                "description": "The action can't be perfomed in the current object's state.", 
                "name": "UnacceptableState"
              }, 
              {
                "description": "The object that you are trying to access does not exist on the cloud.", 
                "name": "ObjectNotFoundOnCloud"
              }, 
              {
                "description": "Some of these settings cannot be applied, they either conflict with the current state or are invalid.", 
                "name": "UnacceptableObjectConfiguration"
              }
            ]
          }, 
          "422": {
            "description": "This request was well-formed but was rejected due to semantic errors.", 
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }, 
            "x-errorCodes": [
              {
                "description": "Some of the configuration settings cannot be applied because they conflict with the current state.", 
                "name": "ConfigurationMismatch"
              }
            ]
          }, 
          "500": {
            "description": "A server-side error occured.", 
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }, 
          "501": {
            "description": "This feature is not implemented in Scalr.", 
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }, 
          "503": {
            "description": "The service is currently unavailable.", 
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }, 
      "get": {
        "description": "Retrieve detailed information about an Image.", 
        "responses": {
          "200": {
            "description": "Redirects to the Image.", 
            "schema": {
              "$ref": "#/definitions/ImageDetailsResponse"
            }
          }, 
          "400": {
            "description": "A client-side error was made.", 
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }, 
            "x-errorCodes": [
              {
                "description": "The request was structurally incorrect, and was not understood by the API.", 
                "name": "InvalidStructure"
              }, 
              {
                "description": "The request was understood by the API, but included invalid data.", 
                "name": "InvalidValue"
              }, 
              {
                "description": "The request wasn't understood by the API.", 
                "name": "BadRequest"
              }
            ]
          }, 
          "401": {
            "description": "The request was not authenticated.", 
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }, 
            "x-errorCodes": [
              {
                "description": "The request was not properly authenticated.", 
                "name": "BadAuthentication"
              }
            ]
          }, 
          "403": {
            "description": "Insufficient permissions.", 
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }, 
            "x-errorCodes": [
              {
                "description": "This request should be made in a different Scope.", 
                "name": "ScopeViolation"
              }, 
              {
                "description": "You do not have the necessary permissions to perform this request.", 
                "name": "PermissionViolation"
              }
            ]
          }, 
          "404": {
            "description": "Resource not found.", 
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }, 
            "x-errorCodes": [
              {
                "description": "This endpoint does not exist.", 
                "name": "EndpointNotFound", 
                "noDoc": true
              }, 
              {
                "description": "The object you are trying to access does not exist.", 
                "name": "ObjectNotFound"
              }
            ]
          }, 
          "409": {
            "description": "Conflict with current state.", 
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }, 
            "x-errorCodes": [
              {
                "description": "These changes aren't possible while this object is in use.", 
                "name": "ObjectInUse"
              }, 
              {
                "description": "These changes would violate a unicity constraint.", 
                "name": "UnicityViolation"
              }, 
              {
                "description": "Some of the objects being changed are locked and cannot be changed.", 
                "name": "Locked"
              }, 
              {
                "description": "This Cloud platform is not enabled.", 
                "name": "NotEnabledPlatform"
              }, 
              {
                "description": "The Operating System does not match.", 
                "name": "OperatingSystemMismatch"
              }, 
              {
                "description": "Some of the objects or actions being access are deprecated.", 
                "name": "Deprecated"
              }, 
              {
                "description": "The action can't be perfomed in the current object's state.", 
                "name": "UnacceptableState"
              }, 
              {
                "description": "The object that you are trying to access does not exist on the cloud.", 
                "name": "ObjectNotFoundOnCloud"
              }, 
              {
                "description": "Some of these settings cannot be applied, they either conflict with the current state or are invalid.", 
                "name": "UnacceptableObjectConfiguration"
              }
            ]
          }, 
          "422": {
            "description": "This request was well-formed but was rejected due to semantic errors.", 
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }, 
            "x-errorCodes": [
              {
                "description": "Some of the configuration settings cannot be applied because they conflict with the current state.", 
                "name": "ConfigurationMismatch"
              }
            ]
          }, 
          "500": {
            "description": "A server-side error occured.", 
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }, 
          "501": {
            "description": "This feature is not implemented in Scalr.", 
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }, 
          "503": {
            "description": "The service is currently unavailable.", 
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }, 
      "parameters": [
        {
          "description": "The ID of the Environment scoping this request.", 
          "in": "path", 
          "name": "envId", 
          "required": true, 
          "type": "integer"
        }, 
        {
          "description": "The ID of a Role object.", 
          "in": "path", 
          "name": "roleId", 
          "required": true, 
          "type": "integer", 
          "x-references": {
            "$ref": "#/definitions/Role"
          }
        }, 
        {
          "description": "The ID of a Image object.", 
          "in": "path", 
          "maxLength": 36, 
          "minLength": 36, 
          "name": "imageId", 
          "pattern": "[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}", 
          "required": true, 
          "type": "string", 
          "x-references": {
            "$ref": "#/definitions/Image"
          }
        }
      ]
    }